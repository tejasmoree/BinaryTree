class Solution {
    public List<List<Integer>> levelOrderBottom(TreeNode root) {
        List<List<Integer>> wraplist = new ArrayList<>();
        if(root == null) return wraplist;
        
        Queue<TreeNode> q = new LinkedList<>();
        q.offer(root);
        
        while(!q.isEmpty()){
            int size = q.size();
            ArrayList<Integer> sublist = new ArrayList<>();
            
            for(int i = 0; i<size; i++){
                TreeNode node = q.poll();
                if(node.left != null) q.offer(node.left);
                if(node.right != null) q.offer(node.right);
                sublist.add(node.val);
            }
            
            wraplist.add(0, sublist);
        }
        
        return wraplist;
    }
}
