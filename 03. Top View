class Pair{
    Node node;
    int val;
    Pair(Node node, int val){
        this.node = node;
        this.val = val;
    }
}
class Solution
{
    static ArrayList<Integer> topView(Node root){
        ArrayList<Integer> list = new ArrayList<>();
        if(root == null) return list;
        
        Map<Integer, Integer> map = new TreeMap<>();
        
        Queue<Pair> q = new LinkedList<>();
        q.offer(new Pair(root, 0));
        while(!q.isEmpty()){
            Pair pair = q.poll();
            Node node = pair.node;
            int x= pair.val;
            
            if(!map.containsKey(x)) map.put(x, node.data);
            
            if(node.left != null) q.offer(new Pair(node.left, x - 1));
            if(node.right != null)q.offer(new Pair(node.right,x + 1));
        }
        for(Map.Entry<Integer, Integer> entry : map.entrySet()){
            list.add(entry.getValue());
        }
        return list;
    }
}
